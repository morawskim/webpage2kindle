include: '/.gitlab/docker-template.yaml'

stages:
  - prepare
  - qa
  - docker

variables:
  PHP_EXTENSIONS: sockets pdo_sqlite sqlite3

composer:
  stage: prepare
  image: composer:2
  before_script:
    - composer config -g cache-dir "$CI_PROJECT_DIR/.composer-cache"
  script:
    - cd symfony-app/
    - composer install --ignore-platform-reqs --optimize-autoloader --no-interaction --no-progress --no-ansi
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .composer-cache
  artifacts:
    paths:
      - symfony-app/vendor/
    expire_in: 30 days
    when: on_success

phpstan:
  stage: qa
  image: jakzal/phpqa:alpine
  script:
    - cd symfony-app/
    - phpstan analyse
  dependencies:
    - composer

behat:
  stage: qa
  image: thecodingmachine/php:8.2-v4-cli-node16
  script:
    - cd symfony-app/
    - bin/console --env=test broadway:event-store:create
    - ./vendor/bin/behat
  dependencies:
    - composer

docker/main:
  extends: .docker
  dependencies:
    - composer
  script:
    - >
      [[ "$CI_COMMIT_BRANCH" -eq "main" ]] && IMAGE_TAG=latest || IMAGE_TAG=`echo $CI_COMMIT_BRANCH  | tr ' /_' '-' | tr -cd 'a-zA-Z0-9-' | tr -s '-' `
    - echo "IMAGE_TAG - $IMAGE_TAG (CI_COMMIT_BRANCH - $CI_COMMIT_BRANCH)"
    - /kaniko/executor --context $CI_PROJECT_DIR/symfony-app --dockerfile $CI_PROJECT_DIR/symfony-app/Dockerfile --destination ${CI_REGISTRY}/${CI_PROJECT_PATH}/symfony-app:$IMAGE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"
      when: manual
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
      allow_failure: true
