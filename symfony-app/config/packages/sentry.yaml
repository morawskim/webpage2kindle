when@prod:
    sentry:
        dsn: '%env(SENTRY_DSN)%'
        options:
            error_types: 'E_ALL & ~E_DEPRECATED'
            traces_sampler: 'App\Service\SentrySampleRateRule'
            ignore_exceptions:
                - Symfony\Component\Security\Core\Exception\AccessDeniedException
            integrations:
                - 'App\Infrastructure\Sentry\IgnoreHttpClientExceptionsIntegration'
#        If you are using Monolog, you also need these additional configuration and services to log the errors correctly:
#        https://docs.sentry.io/platforms/php/guides/symfony/#monolog-integration
        register_error_listener: false
        register_error_handler: false
    monolog:
        handlers:
            sentry:
                type: sentry
                level: !php/const Monolog\Logger::ERROR
                hub_id: Sentry\State\HubInterface
            # this one acts like fingers_crossed
            sentry_breadcrumbs:
                type: service
                name: sentry_breadcrumbs
                id: Sentry\Monolog\BreadcrumbHandler
    services:
        Monolog\Processor\PsrLogMessageProcessor:
            tags: { name: monolog.processor, handler: sentry }
        App\Service\SentrySampleRateRule: ~
        Sentry\Monolog\BreadcrumbHandler:
            arguments:
                - '@Sentry\State\HubInterface'
                - !php/const Monolog\Logger::DEBUG
        App\Infrastructure\Sentry\IgnoreHttpClientExceptionsIntegration: ~
