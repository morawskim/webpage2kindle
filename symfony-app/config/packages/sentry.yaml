when@prod:
    sentry:
        dsn: '%env(SENTRY_DSN)%'
        options:
            error_types: 'E_ALL & ~E_DEPRECATED'
            traces_sampler: 'App\Service\SentrySampleRateRule'
            ignore_exceptions:
                - Symfony\Component\Security\Core\Exception\AccessDeniedException
            integrations:
                - 'App\Infrastructure\Sentry\IgnoreHttpClientExceptionsIntegration'
            enable_logs: true
#        If you are using Monolog, you also need these additional configuration and services to log the errors correctly:
#        https://docs.sentry.io/platforms/php/guides/symfony/#monolog-integration
        register_error_listener: false
        register_error_handler: false
    monolog:
        handlers:
            stderr:
              type: stream
              path: php://stderr
              level: info
              formatter: monolog.formatter.json
            main:
              type: fingers_crossed
              action_level: error
              handler: sentry_logs
              excluded_http_codes: [ 404, 405 ]
              buffer_size: 50 # How many messages should be saved? Prevent memory leaks
            sentry_logs:
              type: service
              id: Sentry\SentryBundle\Monolog\LogsHandler
    services:
        Sentry\SentryBundle\Monolog\LogsHandler:
          arguments:
          - !php/const Monolog\Logger::DEBUG
        Monolog\Processor\PsrLogMessageProcessor:
            tags: { name: monolog.processor, handler: sentry_logs }
        App\Service\SentrySampleRateRule: ~
        App\Infrastructure\Sentry\IgnoreHttpClientExceptionsIntegration: ~
